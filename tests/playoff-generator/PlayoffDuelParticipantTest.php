<?php

/**
 * Test class for PlayoffDuelParticipant.
 * Generated by PHPUnit on 2012-02-01 at 10:25:18.
 * @group playoff
 */
class PlayoffDuelParticipantTest extends PHPUnit_Framework_TestCase {

    public function test__construct() {
        // first argument must be int, second argument can by anything
        $valid_values = array(1 => 10, 2 => null, 3 => 'hello', 95 => new Exception());
        foreach ($valid_values as $seeded => $team) {
            parent::assertInstanceOf('PlayoffDuelParticipant', new PlayoffDuelParticipant($seeded, $team));
        }
        // first argument must be integer
        $invalid_values = array('1', null, false, 'hello', new Exception(), array());
        foreach ($invalid_values as $value) {
            $this->invalid_arguments($value);
        }
    }

    public function testIs_identical() {
        $a = new PlayoffDuelParticipant(1, 2);
        $b = clone $a;
        parent::assertTrue(PlayoffDuelParticipant::is_identical($a, $b));
        $b->team = '2';
        parent::assertFalse(PlayoffDuelParticipant::is_identical($a, $b));

        // both argument must be instances of PlayoffDuelParticipant
        try {
            PlayoffDuelParticipant::is_identical($a, 85);
            parent::fail('This test did not fail as expected');
        } catch (PlayoffException $e) {
            parent::assertEquals($e->getCode(), PlayoffException::EXC3);
        }
    }

    public function test__toString() {
        $instance = new PlayoffDuelParticipant(1, 55);
        parent::assertTrue(is_string($instance->__toString()));
    }

    private function invalid_arguments($seeded) {
        try {
            new PlayoffDuelParticipant($seeded, 'test');
            parent::fail('This test did not fail as expected');
        } catch (PlayoffException $e) {
            parent::assertEquals($e->getCode(), PlayoffException::EXC2);
        }
    }

}

?>
