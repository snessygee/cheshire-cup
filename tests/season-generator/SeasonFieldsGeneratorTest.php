<?php

/**
 * Test class for SeasonFieldsGenerator.
 * Generated by PHPUnit on 2012-02-01 at 15:40:03.
 * @group season
 */
class SeasonFieldsGeneratorTest extends PHPUnit_Framework_TestCase {

    private $teams;

    protected function setUp() {
        $this->teams = array('A', 'B', 'C', 'D', 'E', 'F', 'G');
    }

    public function testCreate() {
        parent::assertInstanceOf('SeasonFieldsGenerator', SeasonFieldsGenerator::create($this->teams, 2, 2));
        // invalid
        $this->invalid_arguments(null); // number of fields must be number
        $this->invalid_arguments(1); // number must be >= 2
        $this->invalid_arguments(count($this->teams) / 2); // number must be < standard number of fields (team_count/2)
    }

    public function testGenerate() {
        $standard_season = SeasonGenerator::create($this->teams, 2);
        $standard_season->generate();
        $fields_season = SeasonFieldsGenerator::create($this->teams, 2, 2);
        $fields_season->generate();
        parent::assertTrue($standard_season->getSchedule()->getNumberOfRoundsInPeriod() != $fields_season->getSchedule()->getNumberOfRoundsInPeriod());
    }

    private function invalid_arguments($number_of_fields) {
        try {
            SeasonFieldsGenerator::create($this->teams, 2, $number_of_fields);
            parent::fail('This test did not fail as expected');
        } catch (SeasonException $e) {
            parent::assertEquals($e->getCode(), SeasonException::EXC5);
        }
    }

}

?>
