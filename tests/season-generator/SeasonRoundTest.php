<?php

/**
 * Test class for SeasonRound.
 * Generated by PHPUnit on 2012-02-01 at 13:28:14.
 * @group season
 */
class SeasonRoundTest extends PHPUnit_Framework_TestCase {

    /** @var SeasonRound */
    protected $object;
    
    protected function setUp() {
        $this->object = SeasonRound::constructFromTeams(array('A', 'B', 'C', 'D'));
    }    
    
    public function testConstruct() {
        parent::assertInstanceOf('SeasonRound', SeasonRound::constructFromTeams(array('A', 'B')));  
        parent::assertInstanceOf('SeasonRound', SeasonRound::constructFromMatches(array('A', 'B')));        
        // constructors are not safe (all argument testing in SeasonGenerator)
    }
    
    public function testSwapMatchOfFirstTeam() {        
        $old_match = $this->getFirstMatch();
        $this->object->swapMatchOfFirstTeam();
        $new_match = $this->getFirstMatch();
        parent::assertEquals($old_match->home, $new_match->away);
        parent::assertEquals($old_match->away, $new_match->home);
    }

    public function testGetIterator() {
        parent::assertInstanceOf('Traversable', $this->object->getIterator());
    }

    private function getFirstMatch() {
        foreach ($this->object as $match) {
            return clone $match;
        }
    }
}

?>
